<Page x:Class="ChartConvertor.Views.SettingsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:helpers="using:ChartConvertor.Helpers"
      xmlns:xaml="using:Microsoft.UI.Xaml"
      xmlns:i="using:Microsoft.Xaml.Interactivity"
      xmlns:core="using:Microsoft.Xaml.Interactions.Core"
      mc:Ignorable="d">
    <Page.Resources>
        <helpers:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
    </Page.Resources>
    <Grid>
        <StackPanel x:Name="ContentArea">
            <InfoBar x:Uid="Settings_InfoBar"
                     Severity="Warning"
                     IsOpen="{x:Bind ViewModel.IsLanguageChanged, Mode=TwoWay}" />
            <TextBlock x:Uid="Settings_Personalization"
                       Style="{ThemeResource SubtitleTextBlockStyle}" />
            <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
                <TextBlock x:Uid="Settings_Theme" />

                <StackPanel Margin="{StaticResource XSmallTopMargin}">
                    <RadioButton x:Uid="Settings_Theme_Light"
                                 Command="{x:Bind ViewModel.SwitchThemeCommand}"
                                 IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}"
                                 FontSize="15"
                                 GroupName="AppTheme">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Light</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                    <RadioButton x:Uid="Settings_Theme_Dark"
                                 Command="{x:Bind ViewModel.SwitchThemeCommand}"
                                 IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}"
                                 FontSize="15"
                                 GroupName="AppTheme">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Dark</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                    <RadioButton x:Uid="Settings_Theme_Default"
                                 Command="{x:Bind ViewModel.SwitchThemeCommand}"
                                 IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Default, Mode=OneWay}"
                                 FontSize="15"
                                 GroupName="AppTheme">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Default</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                </StackPanel>
            </StackPanel>

            <TextBlock x:Uid="Settings_UI"
                       Style="{ThemeResource SubtitleTextBlockStyle}" />
            <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
                <TextBlock x:Uid="Settings_Lang" />
                <StackPanel Margin="{StaticResource XSmallTopMargin}">
                    <ToggleSwitch x:Uid="Settings_Lang_Toggle"
                                  IsOn="{x:Bind ViewModel.IsUseCustomLanguage, Mode=TwoWay}">
                        <!--<i:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Toggled">
                                <core:InvokeCommandAction Command="{x:Bind ViewModel.LanguageToggleChangedCommand}" />
                            </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>-->
                    </ToggleSwitch>
                    <ComboBox x:Name="LangComboBox"
                              SelectedIndex="{x:Bind ViewModel.SelectedLanguage, Mode=TwoWay}"
                              DisplayMemberPath="DisplayName"
                              SelectedValuePath="LanguageCode"
                              ItemsSource="{x:Bind ViewModel.Languages, Mode=OneWay}"
                              IsEnabled="{x:Bind ViewModel.IsUseCustomLanguage, Mode=OneWay}">
                        <i:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="SelectionChanged">
                                <core:InvokeCommandAction Command="{x:Bind ViewModel.LanguageChangedCommand}"
                                                          CommandParameter="{Binding ElementName=LangComboBox,Path=SelectedIndex}" />
                            </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                    </ComboBox>
                </StackPanel>
            </StackPanel>

            <TextBlock x:Uid="Settings_About"
                       Style="{ThemeResource SubtitleTextBlockStyle}" />

            <StackPanel Margin="{StaticResource XSmallTopMargin}">
                <TextBlock Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}"
                           Style="{ThemeResource BodyTextBlockStyle}" />

                <TextBlock x:Uid="Settings_AboutDescription"
                           Margin="{StaticResource XSmallTopMargin}"
                           Style="{ThemeResource BodyTextBlockStyle}" />
                <!--<HyperlinkButton x:Uid="SettingsPage_PrivacyTermsLink" Margin="{StaticResource SettingsPageHyperlinkButtonMargin}" />-->
            </StackPanel>
        </StackPanel>
    </Grid>
</Page>